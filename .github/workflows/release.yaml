name: Release new version

on: [workflow_dispatch]

jobs:
  verify_and_prepare_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Run unit tests and integration tests with Gradle
        run: ./gradlew check

      - name: Release using axion release plugin
        run: |
          ./gradlew release \
              -Prelease.customUsername=${{ github.actor }} \
              -Prelease.customPassword=${{ github.token }}

      - name: Build using Gradle
        run: ./gradlew build

      - run: echo "::set-output name=version::$(./gradlew cV -q -Prelease.quiet)"
        id: getVersion

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.getVersion.outputs.version }}
          release_name: Release ${{ steps.getVersion.outputs.version }}
          draft: false
          prerelease: false

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_version: ${{ steps.getVersion.outputs.version }}

  build_artifacts:
    needs: verify_and_prepare_release
    strategy:
      matrix:
        os: [ubuntu, windows, macos]

    runs-on: ${{ matrix.os }}-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Assemble using Gradle
        run: ./gradlew assemble

      - name: Upload dist zip as release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.verify_and_prepare_release.outputs.upload_url }}
          asset_path: ./build/distributions/countdown-${{ needs.verify_and_prepare_release.outputs.release_version }}.zip
          asset_name: countdown-${{ matrix.os }}-${{ needs.verify_and_prepare_release.outputs.release_version }}.zip
          asset_content_type: application/zip